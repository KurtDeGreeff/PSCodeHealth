{
    "Invoke-ScriptAnalyzer": [
        {
            "1Result_PSProvideCommentHelp": {
                "RuleName": "PSProvideCommentHelp",
                    "Extent": {
                        "Text": "BadFunction"
                    }
            }
        },
        {
            "2Results_2Rules": [
                {
                    "RuleName": "PSProvideCommentHelp",
                        "Extent": {
                            "Text": "VeryBadFunction"
                        }
                },
                {
                    "RuleName": "PSAvoidGlobalVars",
                        "Extent": {
                            "Text": "VeryBadFunction"
                        }
                }
            ]
        }
    ],
    "Get-FunctionScriptAnalyzerResult": [
        {
            "1Result": "1 result"
        },
        {
            "3Results": [
                "First result",
                "Second",
                "Third"
            ]
        }
    ],
    "Get-FunctionDefinition": [
        {
            "IfStatements": {
                "Extent": {
                    "Text": [
                        "Function Test-Conditional",
                        "{",
                        "    [CmdletBinding()]",
                        "    Param(",
                        "        [int]$IfElseif",
                        "    )",
                        "",
                        "    # Testing If/ElseIf conditional statement",
                        "    If ( $IfElseif -eq 10 ) {",
                        "        Write-Host 'IfElseif is 10'",
                        "    }",
                        "    ElseIf ( $IfElseif -eq 11 ) {",
                        "        Write-Host 'IfElseif is 11'",
                        "    }",
                        "    ElseIf ( $IfElseif -eq 12 ) {",
                        "        Write-Host 'IfElseif is 12'",
                        "    }",
                        "    Else {",
                        "        Write-Host 'IfElseif is different'",
                        "    }",
                        "",
                        "    # Testing nested If statement",
                        "    If ( $IfElseif -gt 20 ) {",
                        "        If ( $IfElseif -gt 40 ) {",
                        "            Write-Host 'IfElseif is between 20 and 40'",
                        "        }",
                        "        Else {",
                        "            Write-Host 'IfElseif is greater than 40'",
                        "        }",
                        "    }",
                        "    Else {",
                        "        If ( $IfElseif -ge 10 ) {",
                        "            Write-Host 'IfElseif is a 2 digit number'",
                        "        }",
                        "        Else {",
                        "            Write-Host 'IfElseif is a 1 digit number'",
                        "        }",
                        "    }",
                        "}"
                    ]
                }
            }
        },
        {
            "NoIfStatements": {
                "Extent": {
                    "Text": [
                        "Function Test-Conditional",
                        "{",
                        "    [CmdletBinding()]",
                        "    Param(",
                        "        [int]$IfElseif",
                        "    )",
                        "",
                        "    Write-Host 'There is no If nor is there any ElseIf'",
                        "}"
                    ]
                }
            }
        },
        {
            "NoSwitchStatements": {
                "Extent": {
                    "Text": [
                        "Function Test-Conditional",
                        "{",
                        "    [CmdletBinding()]",
                        "    Param(",
                        "        [int]$Switch",
                        "    )",
                        "",
                        "    Write-Host 'There is no Switch Statement'",
                        "}"
                    ]
                }
            }
        },
        {
            "SwitchStatements": {
                "Extent": {
                    "Text": [
                        "Function Test-Conditional",
                        "{",
                        "    [CmdletBinding()]",
                        "    Param(",
                        "        [int]$Switch",
                        "    )",
                        "",
                        "    Switch ($Switch)",
                        "    {",
                        "        10 {",
                        "            Write-Host 'IfElseif is 10'",
                        "            Break",
                        "        }",
                        "        11 {",
                        "            Write-Host 'IfElseif is 11'",
                        "            Break",
                        "        }",
                        "        12 {",
                        "            Write-Host 'IfElseif is 12'",
                        "            Break",
                        "        }",
                        "        Default {",
                        "            Write-Host 'Switch is different'",
                        "        }",
                        "    }",
                        "}"
                    ]
                }
            }
        }
    ],
    "Invoke-Pester": [
        {
            "1CommandAnalyzed": {
                "CodeCoverage": {
                    "NumberOfCommandsAnalyzed": 1,
                    "NumberOfCommandsExecuted": 0
                }
            }
        },
        {
            "0CommandAnalyzed": {
                "CodeCoverage": {
                    "NumberOfCommandsAnalyzed": 0,
                    "NumberOfCommandsExecuted": 1
                }
            }
        }
    ]
}